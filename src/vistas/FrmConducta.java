/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.CtrlConducta;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.ClsConexion;
import modelo.MtoConducta;
import modelo.ClsValidaciones;
import controlador.CtrlLoginUsuario;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import modelo.MtoBitacoras;

/**
 *
 * @author katy0
 */
public class FrmConducta extends javax.swing.JInternalFrame {

    //Llamando clases
    ClsValidaciones val = new ClsValidaciones();
    CtrlConducta conductaCtrl = new CtrlConducta();
    MtoConducta conducta = new MtoConducta();
    CtrlLoginUsuario mod;
    

    //Declarando variables
    int idGS;
    int idEstudiante;

    //Modelo de la tabla
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableCellRenderer centrado = new DefaultTableCellRenderer();
    
     // Crear una instancia de un objeto Date invocando su constructor 
     Date objDate = new Date();

    /**
     * Creates new form GestionarConductaForm
     */
    public FrmConducta() {
        initComponents();
        
    }

    public FrmConducta(CtrlLoginUsuario mod) {

        this.mod = mod;
        initComponents();
        System.out.println(mod.getId_usuario());
        this.setBorder(null);
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
        tConducta.getTableHeader().setFont(new Font("Roboto", Font.BOLD, 18));
        tConducta.getTableHeader().setOpaque(false);
        tConducta.getTableHeader().setBackground(new Color(33, 37, 41));
        tConducta.getTableHeader().setForeground(new Color(254, 254, 254));
        jId.setVisible(false);

        //LlenandoCombobox
        this.llenarAnio();
        this.llenarGradoSeccion();
        this.llenarEstudiante();
        this.llenarTipoFalta();
        

        //Creando modelo de la tabla
        modelo.addColumn("Estudiante");
        modelo.addColumn("Falta");
        modelo.addColumn("Fecha");
        tConducta.setModel(modelo);

        //Mostrando tabla
        this.mostrarConducta();
        this.centrarColumnas();

        //Deshabilitando botones 
        jActualizar.setEnabled(false);
        jEliminar.setEnabled(false);
        
       jObservacion.setLineWrap(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tConducta = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jActualizar = new javax.swing.JButton();
        jEliminar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jBuscar = new javax.swing.JTextField();
        jId = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        cbAÃ±o = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cbEstudiante = new javax.swing.JComboBox<>();
        cbGradoSeccion = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jObservacion = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cbFalta = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(33, 37, 41));
        setBorder(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText("Gestionar Conducta ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        btnLimpiar.setBackground(new java.awt.Color(33, 37, 41));
        btnLimpiar.setForeground(new java.awt.Color(254, 254, 254));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnLimpiarDefault.png"))); // NOI18N
        btnLimpiar.setBorder(null);
        btnLimpiar.setContentAreaFilled(false);
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimpiar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnLimpiarRollover.png"))); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 610, 140, 70));

        tConducta = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tConducta.setBackground(new java.awt.Color(33, 37, 41));
        tConducta.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        tConducta.setForeground(new java.awt.Color(255, 255, 255));
        tConducta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tConducta.setFocusable(false);
        tConducta.setGridColor(new java.awt.Color(64, 65, 65));
        tConducta.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tConducta.setRowHeight(30);
        tConducta.setSelectionBackground(new java.awt.Color(45, 252, 119));
        tConducta.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tConducta.setShowVerticalLines(false);
        tConducta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tConductaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tConducta);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 730, 410));

        btnAgregar.setBackground(new java.awt.Color(33, 37, 41));
        btnAgregar.setForeground(new java.awt.Color(254, 254, 254));
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnAgregar_default.png"))); // NOI18N
        btnAgregar.setBorder(null);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAgregar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnAgregar_rollover.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 610, 140, 70));

        jActualizar.setBackground(new java.awt.Color(33, 37, 41));
        jActualizar.setForeground(new java.awt.Color(254, 254, 254));
        jActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnActualizar_default.png"))); // NOI18N
        jActualizar.setBorder(null);
        jActualizar.setContentAreaFilled(false);
        jActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jActualizar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnActualizar_rollover.png"))); // NOI18N
        jActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 610, 140, 70));

        jEliminar.setBackground(new java.awt.Color(33, 37, 41));
        jEliminar.setForeground(new java.awt.Color(254, 254, 254));
        jEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnEliminarDefault.png"))); // NOI18N
        jEliminar.setBorder(null);
        jEliminar.setContentAreaFilled(false);
        jEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnEliminarRollover.png"))); // NOI18N
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 610, 140, 70));

        jLabel12.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(254, 254, 254));
        jLabel12.setText("Buscar alumno...");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, -1, 20));

        jBuscar.setBackground(new java.awt.Color(33, 37, 41));
        jBuscar.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        jBuscar.setForeground(new java.awt.Color(254, 254, 254));
        jBuscar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jBuscar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(73, 73, 73), 1, true));
        jBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jBuscarKeyTyped(evt);
            }
        });
        getContentPane().add(jBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 510, 30));
        getContentPane().add(jId, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 60, -1));

        jLayeredPane1.setNextFocusableComponent(jObservacion);

        jLabel11.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(254, 254, 254));
        jLabel11.setText("AÃ±o:");
        jLayeredPane1.add(jLabel11);
        jLabel11.setBounds(10, 10, 32, 21);

        cbAÃ±o.setBackground(new java.awt.Color(33, 37, 41));
        cbAÃ±o.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        cbAÃ±o.setForeground(new java.awt.Color(254, 254, 254));
        cbAÃ±o.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAÃ±o.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAÃ±oItemStateChanged(evt);
            }
        });
        cbAÃ±o.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbAÃ±oMouseClicked(evt);
            }
        });
        cbAÃ±o.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbAÃ±oPropertyChange(evt);
            }
        });
        cbAÃ±o.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbAÃ±oKeyPressed(evt);
            }
        });
        jLayeredPane1.add(cbAÃ±o);
        cbAÃ±o.setBounds(10, 40, 210, 31);

        jLabel14.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(254, 254, 254));
        jLabel14.setText("Tipo de falta:");
        jLayeredPane1.add(jLabel14);
        jLabel14.setBounds(10, 220, 100, 21);

        cbEstudiante.setBackground(new java.awt.Color(33, 37, 41));
        cbEstudiante.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        cbEstudiante.setForeground(new java.awt.Color(254, 254, 254));
        cbEstudiante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbEstudiante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEstudianteItemStateChanged(evt);
            }
        });
        cbEstudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbEstudianteMouseClicked(evt);
            }
        });
        cbEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstudianteActionPerformed(evt);
            }
        });
        cbEstudiante.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbEstudiantePropertyChange(evt);
            }
        });
        cbEstudiante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbEstudianteKeyPressed(evt);
            }
        });
        jLayeredPane1.add(cbEstudiante);
        cbEstudiante.setBounds(10, 180, 210, 31);

        cbGradoSeccion.setBackground(new java.awt.Color(33, 37, 41));
        cbGradoSeccion.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        cbGradoSeccion.setForeground(new java.awt.Color(254, 254, 254));
        cbGradoSeccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbGradoSeccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbGradoSeccionItemStateChanged(evt);
            }
        });
        cbGradoSeccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbGradoSeccionMouseClicked(evt);
            }
        });
        cbGradoSeccion.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbGradoSeccionPropertyChange(evt);
            }
        });
        cbGradoSeccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbGradoSeccionKeyPressed(evt);
            }
        });
        jLayeredPane1.add(cbGradoSeccion);
        cbGradoSeccion.setBounds(10, 110, 210, 31);

        jObservacion.setBackground(new java.awt.Color(33, 37, 41));
        jObservacion.setColumns(20);
        jObservacion.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        jObservacion.setForeground(new java.awt.Color(255, 255, 255));
        jObservacion.setRows(5);
        jObservacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(36, 36, 36)));
        jObservacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jObservacionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jObservacionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jObservacion);

        jLayeredPane1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 320, 220, 170);

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("ObservaciÃ³n:");
        jLayeredPane1.add(jLabel8);
        jLabel8.setBounds(10, 290, 92, 21);

        jLabel15.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(254, 254, 254));
        jLabel15.setText("Grado/SecciÃ³n:");
        jLayeredPane1.add(jLabel15);
        jLabel15.setBounds(10, 80, 109, 21);

        jLabel16.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(254, 254, 254));
        jLabel16.setText("Estudiante:");
        jLayeredPane1.add(jLabel16);
        jLabel16.setBounds(10, 150, 78, 21);

        cbFalta.setBackground(new java.awt.Color(33, 37, 41));
        cbFalta.setFont(new java.awt.Font("Roboto Black", 0, 16)); // NOI18N
        cbFalta.setForeground(new java.awt.Color(254, 254, 254));
        cbFalta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFalta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFaltaItemStateChanged(evt);
            }
        });
        cbFalta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbFaltaMouseClicked(evt);
            }
        });
        cbFalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFaltaActionPerformed(evt);
            }
        });
        cbFalta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbFaltaPropertyChange(evt);
            }
        });
        cbFalta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbFaltaKeyPressed(evt);
            }
        });
        jLayeredPane1.add(cbFalta);
        cbFalta.setBounds(10, 250, 210, 31);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 250, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //<editor-fold defaultstate="collapsed" desc="ClsValidaciones">
    private void jBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscarKeyTyped
char c = evt.getKeyChar();
        if (!Character.isWhitespace(c) && c != '@' && c != '.' && c != '_') {
            val.verificarAlfanumerico(evt);
        }
    }//GEN-LAST:event_jBuscarKeyTyped

    private void jBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscarKeyPressed
        val.verificarPegar(evt);
    }//GEN-LAST:event_jBuscarKeyPressed

    private void cbAÃ±oPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbAÃ±oPropertyChange

    }//GEN-LAST:event_cbAÃ±oPropertyChange

    private void cbAÃ±oMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbAÃ±oMouseClicked

    }//GEN-LAST:event_cbAÃ±oMouseClicked

    private void cbGradoSeccionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbGradoSeccionPropertyChange

    }//GEN-LAST:event_cbGradoSeccionPropertyChange

    private void cbGradoSeccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbGradoSeccionMouseClicked

    }//GEN-LAST:event_cbGradoSeccionMouseClicked

    private void cbGradoSeccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbGradoSeccionItemStateChanged
        this.llenarEstudiante();
    }//GEN-LAST:event_cbGradoSeccionItemStateChanged

    private void cbAÃ±oItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAÃ±oItemStateChanged
        this.llenarGradoSeccion();
    }//GEN-LAST:event_cbAÃ±oItemStateChanged

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        if (jObservacion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos vacios.", "Rellene los campos faltantes.", JOptionPane.WARNING_MESSAGE);
        } else {

            //Dividiendo el apellido y el nombre
            String estudiante = cbEstudiante.getItemAt(cbEstudiante.getSelectedIndex());
            String[] parte = estudiante.split("-");
            String apellido = parte[0];
            String nombre = parte[1];

            //Obteniendo id del estudiante
            idEstudiante = conducta.obtenerIdEstudiante(apellido, nombre);

            //Obteniendo el Ãºltimo id
            int idConducta = conducta.obtenerUltimoId() + 1;

            //Seteando todos los valores
            conductaCtrl.setIdConducta(idConducta);
            conductaCtrl.setObservacion(jObservacion.getText());
            conductaCtrl.setIdEstudiante(idEstudiante);
            conducta.obtenerIdTipoFalta(cbFalta.getItemAt(cbFalta.getSelectedIndex()));

            // Mostrar la fecha y la hora usando toString ()
            String strDateFormat = "MM-dd-yyyy";
            SimpleDateFormat objSDF = new SimpleDateFormat(strDateFormat); 
            //System.out.println(objSDF.format(objDate)); 
            conductaCtrl.setFecha(objSDF.format(objDate));

            //Ejecutando mantenimiento 
            if (conducta.insertarConducta()) {
                JOptionPane.showMessageDialog(null, "Ha agregado los datos correctamente");
                MtoBitacoras add = new MtoBitacoras();
                int id = add.capturarIdBitacora() + 1;
                mod.setId_usuario(mod.getId_usuario());
                mod.setId_bitacora(id);
                add.agregarBitacoraAgregarConducta(mod);
                this.limpiarTabla();
                this.mostrarConducta();
                this.limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "No se han agregado los datos correctamente");
            }

        }
        
       
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizarActionPerformed

        //Validando campos vacios
        if (jObservacion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos vacios.", "Rellene los campos faltantes.", JOptionPane.WARNING_MESSAGE);
        } else {

            //Dividiendo el apellido y el nombre
            String estudiante = cbEstudiante.getItemAt(cbEstudiante.getSelectedIndex());
            String[] parte = estudiante.split("-");
            String apellido = parte[0];
            String nombre = parte[1];

            //Obteniendo id del estudiante
            idEstudiante = conducta.obtenerIdEstudiante(apellido, nombre);
            
            //Seteando todos los valores
            conductaCtrl.setObservacion(jObservacion.getText());
            conductaCtrl.setIdEstudiante(idEstudiante);
            
            // Mostrar la fecha y la hora usando toString ()
            String strDateFormat = "MM-dd-yyyy";
            SimpleDateFormat objSDF = new SimpleDateFormat(strDateFormat); 
            //System.out.println(objSDF.format(objDate)); 
            conductaCtrl.setFecha(objSDF.format(objDate));
            conducta.obtenerIdTipoFalta(cbFalta.getItemAt(cbFalta.getSelectedIndex()));

            //Ejecutando mantemiento 
            if (conducta.actualizarConducta()) {
                JOptionPane.showMessageDialog(null, "Ha actualizado los datos correctamente");
                MtoBitacoras add = new MtoBitacoras();
                int id = add.capturarIdBitacora() + 1;
                mod.setId_usuario(mod.getId_usuario());
                mod.setId_bitacora(id);
               add.agregarBitacoraActualizaConducta(mod);

            } else {
                JOptionPane.showMessageDialog(null, "No se han actualizado los datos correctamente");
            }

            this.limpiarTabla();
            this.mostrarConducta();
            this.limpiarCampos();
            this.reiniciarBusqueda();
        }
    }//GEN-LAST:event_jActualizarActionPerformed

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed

        if (jObservacion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campos vacios.", "Rellene los campos faltantes.", JOptionPane.WARNING_MESSAGE);
        } else {

            int eliminar = JOptionPane.showConfirmDialog(this, "Â¿EstÃ¡s seguro de eliminar este resgistro?",
                    "AtenciÃ³n", JOptionPane.YES_NO_OPTION);
            if (eliminar == 0) {

                if (conducta.eliminarConducta()) {
                    JOptionPane.showMessageDialog(null, "Ha eliminado los datos correctamente");
                    MtoBitacoras add = new MtoBitacoras();
                    int id = add.capturarIdBitacora() + 1;
                    mod.setId_usuario(mod.getId_usuario());
                    mod.setId_bitacora(id);
                    add.agregarBitacoraEliminarConducta(mod);

                } else {
                    JOptionPane.showMessageDialog(null, "No se han eliminado los datos correctamente");
                }
            }
        }

        this.limpiarTabla();
        this.mostrarConducta();
        this.limpiarCampos();
        this.reiniciarBusqueda();
    }//GEN-LAST:event_jEliminarActionPerformed

    private void tConductaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tConductaMouseClicked

        //Deshabilitando botones 
        jActualizar.setEnabled(true);
        jEliminar.setEnabled(true);
        btnAgregar.setEnabled(false);

        //Obteniendo el valor de la fila
        int fila = tConducta.getSelectedRow();
        
        //Dividiendo del estudiante
        String student = String.valueOf(tConducta.getValueAt(fila, 0));
        String[] parte = student.split("-");
        String apellido = parte[0];
        String nombre = parte[1];
        
        cbEstudiante.setSelectedItem(student);

        //Setetando combo de grado/seccion
        String itemGS = conducta.getItemConducta(apellido, nombre);
        cbGradoSeccion.setSelectedItem(itemGS);

        //Seteando el combo de anio
        String itemAnio = conducta.getItemAnio(apellido, nombre);
        cbAÃ±o.setSelectedItem(itemAnio);
       
        //Obteniendo valores de la fila
        String falta = String.valueOf(tConducta.getValueAt(fila, 1));
        cbFalta.setSelectedItem(falta);
        String fecha = String.valueOf(tConducta.getValueAt(fila, 2));
        
        
        //obteniendo id de conducta 
        conducta.obtenerCamposConducta(fecha, apellido, nombre,falta);

        //Seteando valores a los campos
        jObservacion.setText(conductaCtrl.getObservacion());
       
    }//GEN-LAST:event_tConductaMouseClicked

    private void jBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscarKeyReleased
        String busqueda = jBuscar.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(modelo);
        tConducta.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(busqueda));
    }//GEN-LAST:event_jBuscarKeyReleased

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cbAÃ±oKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbAÃ±oKeyPressed
        // TODO add your handling code here:
        val.verificarPegar(evt);
    }//GEN-LAST:event_cbAÃ±oKeyPressed

    private void cbGradoSeccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbGradoSeccionKeyPressed
        // TODO add your handling code here:
        val.verificarPegar(evt);
    }//GEN-LAST:event_cbGradoSeccionKeyPressed

    private void jObservacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jObservacionKeyPressed
        // TODO add your handling code here:
        
        String Caracteres = jObservacion.getText();
        if(Caracteres.length()>=200){
            jObservacion.setText("");
            JOptionPane.showMessageDialog(null, "Limite de carÃ¡cteres alcanzado.","Aviso",JOptionPane.WARNING_MESSAGE);
        }
        val.verificarPegar(evt);
    }//GEN-LAST:event_jObservacionKeyPressed

    private void jObservacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jObservacionKeyTyped
        // TODO add your handling code here:
        val.verificarAlfanumerico(evt);
    }//GEN-LAST:event_jObservacionKeyTyped

    private void cbEstudianteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEstudianteItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstudianteItemStateChanged

    private void cbEstudianteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbEstudianteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstudianteMouseClicked

    private void cbEstudiantePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbEstudiantePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstudiantePropertyChange

    private void cbEstudianteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbEstudianteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstudianteKeyPressed

    private void cbEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstudianteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstudianteActionPerformed

    private void cbFaltaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFaltaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFaltaItemStateChanged

    private void cbFaltaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbFaltaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFaltaMouseClicked

    private void cbFaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFaltaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFaltaActionPerformed

    private void cbFaltaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbFaltaPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFaltaPropertyChange

    private void cbFaltaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbFaltaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFaltaKeyPressed
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="LlenandoComboBox">
    //MÃ©todo para combobox del aÃ±o
    public void llenarAnio() {

        //Seteando modelo del combo
        cbAÃ±o.setModel(conducta.llenarAnio());
    }
    
    public void llenarTipoFalta() {

        //Seteando modelo del combo
        cbFalta.setModel(conducta.llenarTipoFalta());
    }

    //MÃ©todo para combobox de grado/seccion
    public void llenarGradoSeccion() {

        //Obteniendo parametro del aÃ±o
        String anio = cbAÃ±o.getItemAt(cbAÃ±o.getSelectedIndex());
        conductaCtrl.setAnio(anio);

        //Seteando modelo del combo
        cbGradoSeccion.setModel(conducta.llenarGradoSeccion());
    }

    //MÃ©todo para combobocx de estudiante
    public void llenarEstudiante() {

        //Dividiendo el grado y la seccion
        String gradoSeccion = cbGradoSeccion.getItemAt(cbGradoSeccion.getSelectedIndex());
        String[] parte = gradoSeccion.split("-");
        String grado = parte[0];
        String seccion = parte[1];

        //Obteniendo id del gradoSeccion
        idGS = conducta.obtenerIdGS(grado, seccion);
        conductaCtrl.setIdGradoSeccion(idGS);

        //Llenando el combobox
        cbEstudiante.setModel(conducta.llenarEstudiante());
    }
    //</editor-fold>

    public void reiniciarBusqueda() {
        jBuscar.setText("");
        String busqueda = jBuscar.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(modelo);
        tConducta.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(busqueda));
    }
    
    public void centrarColumnas(){
        centrado.setHorizontalAlignment(JLabel.CENTER);
        for (int i = 0; i < 3; i++) {
            tConducta.getColumnModel().getColumn(i).setCellRenderer(centrado);
        }
    }

    public void mostrarConducta() {
        ClsConexion con = new ClsConexion();
        Connection datos;
        try {
            datos = con.conectar();
            String sql = "SELECT CONCAT(e.apellido,'-',e.nombre) as Estudiante, t.tipo_falta, c.fecha FROM conducta c, estudiante e, tipo_falta t WHERE c.id_estudiante = e.id_estudiante AND c.id_tipo_falta = t.id_tipo_falta";
            PreparedStatement dato = datos.prepareStatement(sql);
            ResultSet rs = dato.executeQuery();
            while (rs.next()) {
                Object fila[] = {rs.getString(1), rs.getString(2), rs.getString(3)};
                modelo.addRow(fila);
            }
            tConducta.setModel(modelo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void limpiarTabla() {
        //Limpiar tabla
        int filas = tConducta.getRowCount();
        for (int i = 0; filas > i; i++) {
            modelo.removeRow(0);
        }
    }

    public void limpiarCampos() {

        //limpiando campos
        jObservacion.setText("");
        jId.setText("");
        jBuscar.setText("");

        //Deshabilitando botones 
        jActualizar.setEnabled(false);
        jEliminar.setEnabled(false);
        btnAgregar.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cbAÃ±o;
    private javax.swing.JComboBox<String> cbEstudiante;
    private javax.swing.JComboBox<String> cbFalta;
    private javax.swing.JComboBox<String> cbGradoSeccion;
    private javax.swing.JButton jActualizar;
    private javax.swing.JTextField jBuscar;
    private javax.swing.JButton jEliminar;
    private javax.swing.JTextField jId;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTextArea jObservacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tConducta;
    // End of variables declaration//GEN-END:variables
}
